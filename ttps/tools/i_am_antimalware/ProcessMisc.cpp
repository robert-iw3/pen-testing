#include "ProcessMisc.h"


std::wstring ReadRegistryDefaultValue(const std::wstring clsid)
{
    HKEY hKey;
    std::wstring subKey = L"CLSID\\{" + clsid + L"}\\InprocServer32";
    wchar_t value[512]; // Adjust size as needed
    DWORD valueLength = sizeof(value);
    LONG result;
    result = RegOpenKeyExW(HKEY_CLASSES_ROOT, subKey.c_str(), 0, KEY_READ, &hKey);
    if (result != ERROR_SUCCESS)
    {
        std::wcerr << L"Failed to open registry key. Error: " << result << std::endl;
        return L"";
    }
    result = RegQueryValueExW(hKey, nullptr, nullptr, nullptr, reinterpret_cast<LPBYTE>(value), &valueLength);
    RegCloseKey(hKey);

    if (result != ERROR_SUCCESS)
    {
        std::wcerr << L"Failed to read default value. Error: " << result << std::endl;
        return L"";
    }
    return std::wstring(value);
}
bool SetDefaultInprocServer32(const std::wstring clsid, const std::wstring dllPath)
{
    std::wstring keyPath = L"CLSID\\{" + clsid + L"}\\InprocServer32";
    HKEY hKey;
    LONG result;
    // Open or create the registry key
    result = RegCreateKeyExW(
        HKEY_CLASSES_ROOT,
        keyPath.c_str(),
        0,
        NULL,
        REG_OPTION_NON_VOLATILE,
        KEY_WRITE,
        NULL,
        &hKey,
        NULL
    );
    if (result != ERROR_SUCCESS)
    {
        std::wcerr << L"Failed to open or create registry key. Error: " << result << std::endl;
        return false;
    }
    // Set the (Default) value
    result = RegSetValueExW(
        hKey,
        NULL, // NULL sets the (Default) value
        0,
        REG_SZ,
        reinterpret_cast<const BYTE*>(dllPath.c_str()),
        static_cast<DWORD>((dllPath.size() + 1) * sizeof(wchar_t))
    );
    RegCloseKey(hKey);
    if (result != ERROR_SUCCESS)
    {
        std::wcerr << L"Failed to set registry value. Error: " << result << std::endl;
        return false;
    }
    return true;
}