// dllmain.cpp : Defines the entry point for the DLL application.
#include <iostream>
#include "pch.h"
#include <cstdio>

void LogLastError(const wchar_t* context)
{
    DWORD errorCode = GetLastError();

    wchar_t buffer[256];
    swprintf_s(buffer, L"%s failed with error code %lu\n", context, errorCode);

    OutputDebugStringW(buffer);
}

extern "C" __declspec(dllexport) HRESULT __stdcall DllRegisterServer(void)
{
    OutputDebugString(L"DllRegisterServer");
    /*
    INSERT CODE HERE
    */
    return S_OK;
}

BOOL APIENTRY DllMain(HMODULE hModule,
    DWORD  ul_reason_for_call,
    LPVOID lpReserved
)
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
    {
        OutputDebugString(L"DLL_PROCESS_ATTACH");
        /*LPCWSTR filePath = L"C:\\Program Files\\Bitdefender\\Bitdefender Security\\mark.txt";

        HANDLE hFile = CreateFileW(
            filePath,
            GENERIC_WRITE,
            0,
            NULL,
            CREATE_ALWAYS,
            FILE_ATTRIBUTE_NORMAL,
            NULL
        );

        if (hFile == INVALID_HANDLE_VALUE) {
            LogLastError(L"CreateFileW");
        }
        else {
            OutputDebugStringW(L"File created successfully.\n");
            CloseHandle(hFile);
        }*/
        break;
    }
    case DLL_THREAD_ATTACH:
    {
        OutputDebugString(L"DLL_THREAD_ATTACH");
        break;
    }
    case DLL_THREAD_DETACH:
    {
        OutputDebugString(L"DLL_THREAD_DETACH");
        break;
    }
    case DLL_PROCESS_DETACH:
    {
        OutputDebugString(L"DLL_PROCESS_DETACH");
        break;
    }
    }
    return TRUE;
}