# Register: adgroups
from typing import List
from core.gunnershell.bofs.base import Bof, register
import argparse
from colorama import Style, Fore

brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
brightyellow = "\001" + Style.BRIGHT + Fore.YELLOW + "\002"
reset = Style.RESET_ALL

def _is_ip(s: str) -> bool:
    if not s: return False
    s = s.strip("[]")  # allow [::1] style
    # IPv4 quick check
    parts = s.split(".")
    if len(parts) == 4:
        try:
            return all(0 <= int(p) <= 255 and (p == "0" or not p.startswith("0") or p == "0") for p in parts)
        except ValueError:
            pass
    # IPv6 quick check
    if ":" in s:
        hextets = s.split(":")
        if 2 <= len(hextets) <= 8 and all((h == "" or (1 <= len(h) <= 4 and all(c in "0123456789abcdefABCDEF" for c in h))) for h in hextets):
            return True
    return False

def _space_escape(s: str) -> str:
    return (s or "").replace(" ", "%20")

@register("adgroups")
class AdGroupsBof(Bof):
    base64bof: str = "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aGFyAF9faW1wX01TVkNSVCRtZW1tb3ZlAF9faW1wX0JlYWNvbkRhdGFQYXJzZQBfX2ltcF9CZWFjb25EYXRhRXh0cmFjdABfX2ltcF9CZWFjb25EYXRhSW50AF9faW1wX1dMREFQMzIkbGRhcF9zc2xpbml0VwBfX2ltcF9XTERBUDMyJGxkYXBfaW5pdFcAX19pbXBfQmVhY29uUHJpbnRmAF9faW1wX1dMREFQMzIkbGRhcF9zZXRfb3B0aW9uVwBfX2ltcF9XTERBUDMyJGxkYXBfY29ubmVjdABfX2ltcF9XTERBUDMyJGxkYXBfYmluZF9zVwBfX2ltcF9NU1ZDUlQkX3Nud3ByaW50ZgBfX2ltcF9XTERBUDMyJGxkYXBfc2VhcmNoX3NXAF9faW1wX1dMREFQMzIkbGRhcF9maXJzdF9lbnRyeQBfX2ltcF9XTERBUDMyJGxkYXBfZ2V0X3ZhbHVlc1cAX19pbXBfV0xEQVAzMiRsZGFwX3ZhbHVlX2ZyZWVXAF9faW1wX1dMREFQMzIkbGRhcF9tc2dmcmVlAF9faW1wX1dpZGVDaGFyVG9NdWx0aUJ5dGUAX19pbXBfV0xEQVAzMiRsZGFwX2ZpcnN0X2F0dHJpYnV0ZVcAX19pbXBfV0xEQVAzMiRsZGFwX21lbWZyZWVXAF9faW1wX1dMREFQMzIkbGRhcF9uZXh0X2F0dHJpYnV0ZVcAX19pbXBfV0xEQVAzMiRiZXJfZnJlZQBfX2ltcF9XTERBUDMyJGxkYXBfbmV4dF9lbnRyeQBfX2ltcF9XTERBUDMyJGxkYXBfdW5iaW5kAA=="
    x86base64bof: str = ""

    @staticmethod
    def help_menu():
        menu = """
adgroups — Enumerate Domain Groups

Purpose
  Extract groups and membership relationships.

Usage
  bofexec adgroups [--group <name|*>] [--names] [-d <domain>] [--dc <hostname>] [--dc-ip <ip>] [--ldaps] [--port <int>] \\
                   [--basedn <DN>] [--filter <LdapFilter>] [-a <attr,attr,...>]

Connection
  -d, --domain <dns>    DNS name of the target AD domain (e.g., contoso.com). Used for DC discovery and BaseDN if not provided.
  --dc <hostname>       DC hostname/FQDN (preferred when targeting a specific DC).
  --dc-ip <ip>          DC IP address (optional alternative to --dc).
  --ldaps               Use LDAPS (default port 636). If not set -> LDAP (default port 389).
  --port <int>          Override port. If 0/omitted -> defaults by scheme.

Selection & Output
  --group <name|*>      Specific group by sAMAccountName or CN. "*" (default) = all groups.
  --names               List only group names (sAMAccountName), one per line.
  --basedn <DN>         Custom Base DN. Default: derived from --domain or RootDSE defaultNamingContext.
  --filter <filter>     Custom LDAP filter. Default: (&(objectCategory=group)(objectClass=group))
                        If --group is set (not "*"), the default filter is ANDed with (|(sAMAccountName=<g>)(cn=<g>)).
  -a, --attributes <csv>  Comma-separated attributes, or "*" for all (default: "*").

Notes
  1) If no --attributes are specified it defaults to "*".
  2) If no --group is passed it defaults to "*" (list all groups).
  3) If neither --dc nor --dc-ip is passed, a DC is discovered automatically.
"""
        print(brightgreen + menu + reset)
        return

    @staticmethod
    def args_inject(p):
        # Connection / discovery
        p.add_argument("-d", "--domain", default="", help="DNS domain (e.g., contoso.com)")
        p.add_argument("--dc", default="", help="Domain Controller hostname/FQDN")
        p.add_argument("--dc-ip", default="", help="Domain Controller IP address")
        p.add_argument("--ldaps", action="store_true", default=False, help="Use LDAPS (default 636)")
        p.add_argument("--port", type=int, default=0, help="LDAP/LDAPS port (0 => default by scheme)")

        # Search / output
        p.add_argument("--group", default="*", help="Group name (sAMAccountName or CN), or '*' for all")
        p.add_argument("--names", action="store_true", default=False, help="List only group names")
        p.add_argument("--basedn", default="", help="Base DN (default: from --domain or RootDSE)")
        p.add_argument("--filter", default="", help="Custom LDAP filter (default: group filter)")
        p.add_argument("-a", "--attributes", dest="attributes", default="*", help="CSV of attributes or '*' (default '*')")

    @staticmethod
    def build_remote_args(ns) -> List[str]:
        # Prefer --dc over --dc-ip if both supplied
        dc_host  = getattr(ns, "dc", "") or ""
        dc_ip    = getattr(ns, "dc_ip", "") or ""
        domain   = getattr(ns, "domain", "") or ""

        # Soft validation: encourage host in --dc; allow IP in --dc-ip
        if dc_host and _is_ip(dc_host):
            raise ValueError("--dc expects a hostname/FQDN. Use --dc-ip for IPs.")

        use_ldaps = 1 if getattr(ns, "ldaps", False) else 0
        port_in   = int(getattr(ns, "port", 0) or 0)
        port      = port_in if port_in > 0 else (636 if use_ldaps else 389)

        group     = getattr(ns, "group", "*") or "*"
        namesOnly = 1 if getattr(ns, "names", False) else 0
        base_dn   = getattr(ns, "basedn", "") or ""
        filt      = getattr(ns, "filter", "") or ""
        attrsCSV  = getattr(ns, "attributes", "*") or "*"

        # Pack in exact BOF order/types (see header in entry.c):
        # 1 -Z dcHostW, 2 -Z dcIpW, 3 -Z domainW, 4 -i useLdaps, 5 -i port,
        # 6 -Z baseDN,  7 -Z filter,  8 -Z groupName, 9 -i namesOnly, 10 -Z attrsCSV
        return [
            f"-Z:{dc_host}",
            f"-Z:{dc_ip}",
            f"-Z:{domain}",
            f"-i:{use_ldaps}",
            f"-i:{port}",
            f"-Z:{base_dn}",
            f"-Z:{filt}",
            f"-Z:{_space_escape(group)}",
            f"-i:{namesOnly}",
            f"-Z:{attrsCSV}",
        ]
