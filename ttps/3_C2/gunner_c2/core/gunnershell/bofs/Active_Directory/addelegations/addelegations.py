# Register: addelegations
from typing import List
from core.gunnershell.bofs.base import Bof, register
from colorama import Style, Fore

brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
reset = Style.RESET_ALL

def _is_ip(s: str) -> bool:
    if not s: return False
    s = s.strip("[]")
    parts = s.split(".")
    if len(parts) == 4:
        try:
            return all(0 <= int(p) <= 255 for p in parts)
        except ValueError:
            pass
    if ":" in s:
        hextets = s.split(":")
        if 2 <= len(hextets) <= 8 and all((h == "" or (1 <= len(h) <= 4 and all(c in "0123456789abcdefABCDEF" for c in h))) for h in hextets):
            return True
    return False

@register("addelegations")
class AdDelegationsBof(Bof):
    base64bof: str = ""
    x86base64bof: str = "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AAAAuAACAADHRCQITAAAACnwiUQkBI0ENo2EBejz//+JBCT/FQAAAAAB8ImFKPH//4nYi41A8f//ZoM8QS50CUA5hTDx//916ouNKPH//ynZjUwIAYH5/wEAAHd2i5Uo8f//idk5wXMaidZGifKLtUDx//9mizROQWaJtFXm8///6+KJxjHJKd452A9C8YuNKPH//wHOi40w8f//OchzHY1WAYH6/wEAAHcoZseEdejz//8sAI1YAeko////icPpI////2bHhHXo8///AADp9wAAAMeF6Pf//1QAAAAxwImFaPH//zHAiYXs9///jYVo8f//iUQkGDHAiUQkFI2F6Pf//4lEJBAxwMdEJAx+AAAAiUQkCMdEJASeAAAAiTwk/xUAAAAAhcB0BDH262uLhWjx//+JPCSJRCQE/xUAAAAAhcB05cdEJAhUAAAAiUQkBIk8JP8VAAAAAInDhcB0yosAMfaFwHQoiUQkDI2F6PP//74BAAAAx0QkCKAAAADHRCQEAAIAAIkEJP8VAAAAAIkcJP8VAAAAAIuFaPH//4XAdAmJBCT/FQAAAACF9nUax0QkBKgAAADHBCQNAAAA/xUAAAAA6XgHAACNnej3//+6AAQAAInY6CD4//+DvSzx//8AdC6LhSzx//9mgzgAdCKJRCQMx0QkCKAAAADHRCQEAAQAAIkcJP8VAAAAAOlrAQAAugAEAACJ2Ojd9///jYVo8f//ukABAADozff//4O9JPH//wB0JoO9IPH//wB0CsdEJAjCAAAA6ySDvSTx//8AdArHRCQIhgEAAOsRg70g8f//AHTax0QkCOABAACNhWjx///HRCQEQAEAAIkEJP8VAAAAAIO9HPH//wCLFQAAAACNhWjx//90DcdEJBBGAgAA6YYAAACLjTjx//8LjTTx//91PIlEJAyNhej3///HRCQYRgIAAMdEJBS0AgAAx0QkEF4DAADHRCQIxgMAAMdEJAQABAAAiQQk/9LpjAAAAIO9OPH//wB0E4O9NPH//wB1CsdEJBBeAwAA6yCDvTTx//8AixUAAAAAdDKDvTjx//8AdSnHRCQQtAIAAIlEJAyNhej3///HRCQIoAIAAMdEJAQABAAAiQQk/9LrL4lEJAyNhej3///HRCQUtAIAAMdEJBBeAwAAx0QkCOwDAADHRCQEAAQAAIkEJP/SjYXo8///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YwB0AEMAYQB0AGUAZwBvAHIAeQA9AGMAbwBtAHAAdQB0AGUAcgApACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0AYwBvAG0AcAB1AHQAZQByACkAKQApAAAAKAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AcABlAHIAcwBvAG4AKQAoAG8AYgBqAGUAYwB0AEMAbABhAHMAcwA9AHUAcwBlAHIAKQApAAAAKAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AYwBvAG0AcAB1AHQAZQByACkAKABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBjAG8AbQBwAHUAdABlAHIAKQApAAAAKABtAHMARABTAC0AQQBsAGwAbwB3AGUAZABUAG8AQQBjAHQATwBuAEIAZQBoAGEAbABmAE8AZgBPAHQAaABlAHIASQBkAGUAbgB0AGkAdAB5AD0AKgApAAAAKAAmACUAbABzACUAbABzACkAAAAoAHwAKABtAHMARABTAC0AQQBsAGwAbwB3AGUAZABUAG8ARABlAGwAZQBnAGEAdABlAFQAbwA9ACoAKQAoAHUAcwBlAHIAQQBjAGMAbwB1AG4AdABDAG8AbgB0AHIAbwBsADoAMQAuADIALgA4ADQAMAAuADEAMQAzADUANQA2AC4AMQAuADQALgA4ADAAMwA6AD0AMQA2ADcANwA3ADIAMQA2ACkAKQAAACgAdQBzAGUAcgBBAGMAYwBvAHUAbgB0AEMAbwBuAHQAcgBvAGwAOgAxAC4AMgAuADgANAAwAC4AMQAxADMANQA1ADYALgAxAC4ANAAuADgAMAAzADoAPQA1ADIANAAyADgAOAApAAAAKAAmACUAbABzACgAfAAlAGwAcwAlAGwAcwAlAGwAcwApACkAAAAoACYAJQBsAHMAKAB8ACUAbABzACUAbABzACkAKQAAAFsqXSBEaXN0aW5ndWlzaGVkIG5hbWU6ICVscwoAWypdIHRhcmdldGluZyBEQzogXFwlbHMKAFsqXSBGaWx0ZXI6ICVscwoAWypdIFNjb3BlIG9mIHNlYXJjaCB2YWx1ZTogJWQKAGxkYXBfc2VhcmNoX3NXIGZhaWxlZCAocmM9JWx1KQoAcmV0cmlldmVkICVsdSByZXN1bHRzIHRvdGFsCgAK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AADfAgAAAAAAAAAAAAACAAAAAAD0AgAAAAAAAAAAAAACAAAAAAANAwAAAAAAAAAAAAACAAAAAAArAwAAAAAAAAAAAAACAAAAAABLAwAAAAAAAAAAAAACAAAAAABrAwAAAAAAAAAAAAACAAAAAACLAwAAAAAAAAAAAAACAAAAAACnAwAAAAAAAAAAAAACAAAAAADJAwAAAAAAAAAAAAACAAAAAADuAwAAAAAAAAAAAAACAAAAAAALBAAAAAAAAAAAAAACAAAAAAAvBAAAAAAAAAAAAAACAAAAAABHBAAAAAAAAAAAAAACAAAAAABmBAAAAAAAAAAAAAACAIEEAAAucmRhdGEkenp6AC5laF9mcmFtZQBfemVyb193YnVmLnBhcnQuMABfYm9mc3RhcnQAX3ByaW50b3V0cHV0AF9pbnRlcm5hbF9wcmludGYAX1V0ZjE2VG9VdGY4AF9VdGY4VG9VdGYxNgBfX19fY2hrc3RrX21zAF9fX2Noa3N0a19tcwBfX19jaGtzdGsALnJkYXRhJHp6egAuZWhfZnJhbWUAX2N1cnJlbnRvdXRzaXplAF9faW1wX19NU1ZDUlQkY2FsbG9jAF9faW1wX19CZWFjb25PdXRwdXQAX19pbXBfX01TVkNSVCRmcmVlAF9faW1wX19NU1ZDUlQkX3ZzY3ByaW50ZgBfX2ltcF9fS0VSTkVMMzIkR2V0UHJvY2Vzc0hlYXBAMABfX2ltcF9fS0VSTkVMMzIkSGVhcEFsbG9jQDEyAF9faW1wX19NU1ZDUlQkdnNucHJpbnRmAF9faW1wX19LRVJORUwzMiRIZWFwRnJlZUAxMgBfX2ltcF9fTVNWQ1JUJG1lbWNweQBfX2ltcF9fS0VSTkVMMzIkV2lkZUNoYXJUb011bHRpQnl0ZUAzMgBfX2ltcF9fS0VSTkVMMzIkTXVsdGlCeXRlVG9XaWRlQ2hhckAyNABfX2ltcF9fTVNWQ1JUJG1lbW1vdmUAX19pbXBfX0JlYWNvbkRhdGFQYXJzZQBfX2ltcF9fQmVhY29uRGF0YUV4dHJhY3QAX19pbXBfX0JlYWNvbkRhdGFJbnQAX19pbXBfX1dMREFQMzIkbGRhcF9zc2xpbml0VwBfX2ltcF9fV0xEQVAzMiRsZGFwX2luaXRXAF9faW1wX19CZWFjb25QcmludGYAX19pbXBfX1dMREFQMzIkbGRhcF9zZXRfb3B0aW9uVwBfX2ltcF9fV0xEQVAzMiRsZGFwX2Nvbm5lY3QAX19pbXBfX1dMREFQMzIkbGRhcF9iaW5kX3NXAF9faW1wX19NU1ZDUlQkd2NzbGVuAF9faW1wX19NU1ZDUlQkX3Nud3ByaW50ZgBfX2ltcF9fV0xEQVAzMiRsZGFwX3NlYXJjaF9zVwBfX2ltcF9fV0xEQVAzMiRsZGFwX2ZpcnN0X2VudHJ5AF9faW1wX19XTERBUDMyJGxkYXBfZ2V0X3ZhbHVlc1cAX19pbXBfX1dMREFQMzIkbGRhcF92YWx1ZV9mcmVlVwBfX2ltcF9fV0xEQVAzMiRsZGFwX21zZ2ZyZWUAX19pbXBfX1dMREFQMzIkbGRhcF9jb3VudF9lbnRyaWVzAF9faW1wX19XTERBUDMyJGxkYXBfZmlyc3RfYXR0cmlidXRlVwBfX2ltcF9fV0xEQVAzMiRsZGFwX21lbWZyZWVXAF9faW1wX19XTERBUDMyJGxkYXBfbmV4dF9hdHRyaWJ1dGVXAF9faW1wX19XTERBUDMyJGJlcl9mcmVlAF9faW1wX19XTERBUDMyJGxkYXBfbmV4dF9lbnRyeQBfX2ltcF9fV0xEQVAzMiRsZGFwX3VuYmluZAA="

    def help_menu():
        menu = """
addelegations — Enumerate Delegated Privileges

Purpose
  Identify accounts configured for unconstrained / constrained delegation and RBCD.

Usage
  bofexec addelegations [-d <domain>] [--dc <hostname>] [--dc-ip <ip>] [--ldaps] [--port <int>] \\
                        [--unconstrained] [--constrained] [--rbcd] [--users-only|--computers-only] \\
                        [--attributes <csv|*>] [--filter <LdapFilter>]

Connection
  -d, --domain <dns>    DNS name of the target AD domain (e.g., contoso.com).
  --dc <hostname>       DC hostname/FQDN (preferred).
  --dc-ip <ip>          DC IP address (alternative).
  --ldaps               Use LDAPS (default 636). Else LDAP (default 389).
  --port <int>          Override port.

Selection & Output
  --unconstrained       Only TRUSTED_FOR_DELEGATION.
  --constrained         Only classic constrained/PT: (msDS-AllowedToDelegateTo=*) OR TRUSTED_TO_AUTH_FOR_DELEGATION.
  --rbcd                Only RBCD targets: (msDS-AllowedToActOnBehalfOfOtherIdentity=*).  (Overrides the two above.)
  --users-only          Restrict to user objects.
  --computers-only      Restrict to computer objects.
  --attributes <csv|*>  Attributes to print (default "*").
  --filter <filter>     Custom LDAP filter. If supplied, it is used verbatim.

Examples
  bofexec addelegations --rbcd --computers-only --attributes "cn,dNSHostName,msDS-AllowedToActOnBehalfOfOtherIdentity"
  bofexec addelegations --unconstrained --users-only --attributes "sAMAccountName,userAccountControl"
  bofexec addelegations --constrained --attributes "sAMAccountName,msDS-AllowedToDelegateTo"
"""
        print(brightgreen + menu + reset)
        return

    @staticmethod
    def args_inject(p):
        # Connection / discovery
        p.add_argument("-d", "--domain", default="", help="DNS domain (e.g., contoso.com)")
        p.add_argument("--dc", default="", help="Domain Controller hostname/FQDN")
        p.add_argument("--dc-ip", default="", help="Domain Controller IP address")
        p.add_argument("--ldaps", action="store_true", default=False, help="Use LDAPS (default 636)")
        p.add_argument("--port", type=int, default=0, help="LDAP/LDAPS port (0 => default by scheme)")

        # Search / output
        p.add_argument("--unconstrained", action="store_true", default=False, help="Only unconstrained delegation")
        p.add_argument("--constrained",   action="store_true", default=False, help="Only constrained / protocol transition")
        p.add_argument("--rbcd",          action="store_true", default=False, help="Only resource-based constrained delegation (RBCD)")
        p.add_argument("--users-only",     action="store_true", default=False, help="Users only")
        p.add_argument("--computers-only", action="store_true", default=False, help="Computers only")
        p.add_argument("-a", "--attributes", default="*", help='CSV of attributes, or "*" for all (default "*")')
        p.add_argument("-f", "--filter", default="", help="Custom LDAP filter (if set, used verbatim)")

    @staticmethod
    def build_remote_args(ns) -> List[str]:
        dc_host  = getattr(ns, "dc", "") or ""
        dc_ip    = getattr(ns, "dc_ip", "") or ""
        domain   = getattr(ns, "domain", "") or ""
        if dc_host and _is_ip(dc_host):
            raise ValueError("--dc expects a hostname/FQDN. Use --dc-ip for IPs.")

        use_ldaps    = 1 if getattr(ns, "ldaps", False) else 0
        port_in      = int(getattr(ns, "port", 0) or 0)
        port         = port_in if port_in > 0 else (636 if use_ldaps else 389)

        unconstrained= 1 if getattr(ns, "unconstrained", False) else 0
        constrained  = 1 if getattr(ns, "constrained",   False) else 0
        rbcdOnly     = 1 if getattr(ns, "rbcd",          False) else 0
        usersOnly    = 1 if getattr(ns, "users_only",     False) else 0
        compsOnly    = 1 if getattr(ns, "computers_only", False) else 0
        attrsCSV     = getattr(ns, "attributes", "*") or "*"
        filt         = getattr(ns, "filter", "") or ""

        # Pack order must match entry.c
        return [
            f"-Z:{dc_host}",       # 1
            f"-Z:{dc_ip}",         # 2
            f"-Z:{domain}",        # 3
            f"-i:{use_ldaps}",     # 4
            f"-i:{port}",          # 5
            f"-i:{unconstrained}", # 6
            f"-i:{constrained}",   # 7
            f"-i:{rbcdOnly}",      # 8  // NEW
            f"-i:{usersOnly}",     # 9
            f"-i:{compsOnly}",     # 10
            f"-Z:{attrsCSV}",      # 11
            f"-Z:{filt}",          # 12
        ]
