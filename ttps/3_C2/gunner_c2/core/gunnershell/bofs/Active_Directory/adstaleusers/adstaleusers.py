# Register: adstaleusers
from typing import List, Tuple
from core.gunnershell.bofs.base import Bof, register
import argparse
from datetime import datetime
from colorama import Style, Fore

brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
brightyellow = "\001" + Style.BRIGHT + Fore.YELLOW + "\002"
reset = Style.RESET_ALL

def _is_ip(s: str) -> bool:
    if not s: return False
    s = s.strip("[]")
    parts = s.split(".")
    if len(parts) == 4:
        try:
            return all(0 <= int(p) <= 255 and (p == "0" or not p.startswith("0")) for p in parts)
        except ValueError:
            pass
    if ":" in s:
        hextets = s.split(":")
        if 2 <= len(hextets) <= 8 and all(h == "" or (1 <= len(h) <= 4 and all(c in "0123456789abcdefABCDEF" for c in h)) for h in hextets):
            return True
    return False

def _validate_date(s):
    # Accept missing value (default) without error
    if s is None:
        return ""
    s = str(s).strip()
    if not s:
        return ""
    try:
        datetime.strptime(s, "%Y-%m-%d")
        return s
    except ValueError:
        raise argparse.ArgumentTypeError("--since expects YYYY-MM-DD (e.g. 2024-06-01)")

def _space_escape(s: str) -> str:
    return (s or "").replace(" ", "%20")

def _space_escape_csv(s: str) -> str:
    if not s:
        return ""
    parts = [p.strip() for p in s.split(",") if p.strip()]
    return ",".join(_space_escape(p) for p in parts)

@register("adstaleusers")
class AdStaleUsersBof(Bof):
    # Fill these with your compiled BOF blobs
    base64bof: str = ""
    x86base64bof: str = ""  

    @staticmethod
    def help_menu():
        menu = f"""
adstaleusers — Audit and list AD users whose last logon is older than N days (or before a date)

Purpose
  Fast, LDAP-only stale-account sweep. Uses replicated lastLogonTimestamp by default
  (good domain-wide signal), or non-replicated lastLogon for DC-accurate point-in-time checks.

What it reads/evaluates
  • sAMAccountName, displayName, distinguishedName
  • lastLogonTimestamp (replicated) or lastLogon (DC-local)
  • pwdLastSet (password age)
  • userAccountControl (disabled bit), lockoutTime (locked)
  • servicePrincipalName (SPN presence → service accounts)
  • memberOf (direct memberships)

Usage (synopsis)
  bofexec adstaleusers [--days N | --since YYYY-MM-DD]
                       [--attr-source lastLogonTimestamp|lastLogon]
                       [--ou DN] [--member-of DN,DN]
                       [--include-disabled | --disabled-only]
                       [--include-locked   | --locked-only]
                       [--include-null     | --null-only]
                       [--spn-only | --exclude-spn]
                       [--names] [--attributes attr,attr]
                       [--resolve-dates | --raw-timestamps]
                       [--sort name|lastlogon|pwdlastset [asc|desc]]
                       [--limit N] [--stats]
                       [--filter LDAP_FILTER]
                       [-d DOMAIN] [--dc HOST] [--dc-ip IP] [--ldaps] [--port N]

Connection
  -d, --domain <dns>     DNS name for the target AD domain (e.g., contoso.com).
  --dc <hostname>        Domain Controller hostname/FQDN to connect to.
  --dc-ip <ip>           Domain Controller IP address (alternative to --dc).
  --ldaps                Use LDAPS (default 636). Otherwise LDAP (389).
  --port <int>           Override LDAP/LDAPS port.

Query shaping
  --days N               Stale threshold in days (default: 90).
  --since YYYY-MM-DD     Absolute cutoff date; overrides --days.
  --attr-source <which>  Which attribute to evaluate as “last logon”:
                         - lastLogonTimestamp (default, replicated)
                         - lastLogon         (non-replicated, DC-local)
  --ou <DN>              Limit search base to this OU DN (subtree).
  --member-of <DN,DN>    CSV of group DNs; user must be a direct member of ANY.
  --filter <LDAP>        Extra LDAP filter (ANDed with the base user filter).

Account state filters
  --include-disabled     Include disabled users (default excludes).
  --disabled-only        Show only disabled users.
  --include-locked       Include locked-out users (default includes both).
  --locked-only          Show only locked-out users.
  --include-null         Include users with no lastLogon* value.
  --null-only            Show ONLY users with no lastLogon* value.
  --spn-only             Only users with SPNs (likely service accounts).
  --exclude-spn          Exclude users that have SPNs.

Output control
  --names                Print only sAMAccountName (one per line).
  --attributes <csv|*>   Extra attributes to print (in addition to basics). “*” = server-side all.
  --resolve-dates        Human-readable timestamps (default).
  --raw-timestamps       Also show raw 64-bit FILETIME values.
  --sort <field> [dir]   Sort by name | lastlogon | pwdlastset (default: lastlogon desc).
                         If field=name and dir omitted → asc; otherwise default dir=desc.
  --limit N              Stop after N matches.
  --stats                Print summary counts (scanned / stale / disabled / locked / printed).

Defaults
  • Threshold: --days 90 (unless --since given)
  • Source: lastLogonTimestamp
  • Disabled users: excluded (use --include-disabled / --disabled-only to change)
  • Null last logon: treated as stale (override with --include-null/--null-only)
  • Dates: resolved (use --raw-timestamps for FILETIME)
  • Sort: lastlogon desc
  • Scope: entire domain unless --ou is set

Notes & tips
  • lastLogonTimestamp replicates with lag; great for domain-wide stale hunting.
  • lastLogon is not replicated—query a specific DC (often the PDC) with --dc and --attr-source lastLogon
    for “this DC’s view” of activity.
  • --member-of matches direct membership only (no nested expansion).
  • You can combine --member-of with --spn-only to focus on stale service accounts in privileged groups.
  • If your DN contains spaces, just quote it; the wrapper handles escaping.

Practical examples

  Discovery / quick lists
   1) 90+ day stale users, names only:
      bofexec adstaleusers --names

   2) Stale since a fixed date, only disabled under a specific OU:
      bofexec adstaleusers --since 2024-06-01 --disabled-only --ou "OU=Contractors,DC=contoso,DC=com"

   3) DC-accurate audit on the PDC using lastLogon, raw timestamps, limit 50:
      bofexec adstaleusers --dc PDC01 --attr-source lastLogon --raw-timestamps --limit 50

  Service accounts / group targeting
   4) Stale service accounts (have SPNs), include locked ones, older than 120 days:
      bofexec adstaleusers --spn-only --include-locked --days 120 -d contoso.com

   5) Stale users directly in Helpdesk or Domain Admins, sort by name asc:
      bofexec adstaleusers --member-of "CN=Helpdesk,OU=Groups,DC=contoso,DC=com,CN=Domain Admins,CN=Users,DC=contoso,DC=com" --sort name asc

  Triaging output
   6) Print extra attributes for investigation:
      bofexec adstaleusers --attributes mail,userPrincipalName,lastLogon

   7) Show only never-logged-in accounts:
      bofexec adstaleusers --null-only

   8) Summarize (no cap) with stats:
      bofexec adstaleusers --stats

  Connection pinning
   9) Target a specific DC over LDAPS:
      bofexec adstaleusers -d corp.local --dc dc01.corp.local --ldaps
"""
        print(brightgreen + menu + reset)
        return

    @staticmethod
    def args_inject(p: argparse.ArgumentParser):
        # Connection
        try:
            p.add_argument("-d", "--domain", default="", help="DNS domain (contoso.com)")
            p.add_argument("--dc", default="", help="Domain Controller hostname/FQDN")
            p.add_argument("--dc-ip", default="", help="Domain Controller IP address")
            p.add_argument("--ldaps", action="store_true", default=False, help="Use LDAPS (636)")
            p.add_argument("--port", type=int, default=0, help="LDAP/LDAPS port (0 => default by scheme)")

            # Query shaping
            p.add_argument("--days", type=int, default=90, help="Stale threshold in days (default: 90)")
            p.add_argument("--since", type=_validate_date, default="", help="Stale before date (YYYY-MM-DD); overrides --days")
            p.add_argument("--ou", default="", help="Limit search to this base DN (subtree)")
            p.add_argument("--filter", default="", help="Custom LDAP filter (ANDed with base)")
            p.add_argument(
                "--attr-source",
                type=str.lower,
                choices=["lastLogonTimestamp","lastLogon"],
                default="lastLogonTimestamp",
                help="Which attribute to evaluate as last logon",
            )
            g1 = p.add_mutually_exclusive_group()
            g1.add_argument("--include-disabled", action="store_true", default=False, help="Include disabled users")
            g1.add_argument("--disabled-only", action="store_true", default=False, help="Only disabled users")
            g2 = p.add_mutually_exclusive_group()
            g2.add_argument("--include-locked", action="store_true", default=False, help="Include locked-out users")
            g2.add_argument("--locked-only", action="store_true", default=False, help="Only locked-out users")
            g3 = p.add_mutually_exclusive_group()
            g3.add_argument("--include-null", action="store_true", default=False, help="Include users with no last logon value")
            g3.add_argument("--null-only", action="store_true", default=False, help="Only users with no last logon value")
            g4 = p.add_mutually_exclusive_group()
            g4.add_argument("--spn-only", action="store_true", default=False, help="Only users with SPNs (service accounts)")
            g4.add_argument("--exclude-spn", action="store_true", default=False, help="Exclude users with SPNs")
            p.add_argument("--member-of", dest="member_of", default="", help="CSV of group DNs; user must be a direct member of any")

            # Output
            p.add_argument("--names", action="store_true", default=False, help="Print only sAMAccountName")
            p.add_argument("--attributes", dest="attributes", default="*", help="CSV attributes to print, or '*'")
            rd = p.add_mutually_exclusive_group()
            rd.add_argument("--resolve-dates", action="store_true", default=False, help="Show friendly dates (default)")
            rd.add_argument("--raw-timestamps", action="store_true", default=False, help="Show raw 64-bit FILETIME values")
            p.add_argument(
                "--sort",
                nargs="*",            # 0, 1 or 2 values
                default=[],           # let _parse_sort supply the default
                metavar=("FIELD", "DIR"),
                help="Sort by: name|lastlogon|pwdlastset [asc|desc] (default: lastlogon desc)",
            )
            p.add_argument("--limit", type=int, default=0, help="Stop after N matches")
            p.add_argument("--stats", action="store_true", default=False, help="Print summary counts")

        except Exception as e:
            print(brightyellow + f"ERROR: {e}" + reset)
            return

    @staticmethod
    def _parse_sort(ns) -> Tuple[int,int]:
        # map to (field, dir) → (0 none, 1 name, 2 lastlogon, 3 pwdlastset), (0 asc, 1 desc)
        raw = getattr(ns, "sort", ["lastlogon","desc"])
        if isinstance(raw, str): raw = raw.split()
        if not raw: raw = ["lastlogon","desc"]
        field = str(raw[0]).lower()
        direc = str(raw[1]).lower() if len(raw)>1 else ("desc" if field!="name" else "asc")
        f = {"none":0,"name":1,"lastlogon":2,"pwdlastset":3}.get(field,2)
        d = 1 if direc in ("desc","descending") else 0
        return f, d

    @staticmethod
    def build_remote_args(ns) -> List[str]:
        dc_host  = getattr(ns, "dc", "") or ""
        dc_ip    = getattr(ns, "dc_ip", "") or ""
        domain   = getattr(ns, "domain", "") or ""
        if dc_host and _is_ip(dc_host):
            raise ValueError("--dc expects a hostname/FQDN. Use --dc-ip for IPs.")

        use_ldaps = 1 if getattr(ns, "ldaps", False) else 0
        port_in   = int(getattr(ns, "port", 0) or 0)
        port      = port_in if port_in > 0 else (636 if use_ldaps else 389)

        ouDN      = _space_escape(getattr(ns, "ou", "") or "")
        filt      = getattr(ns, "filter", "") or ""
        attr_src  = 0 if getattr(ns, "attr_source", "lastlogontimestamp") == "lastlogontimestamp" else 1
        days      = int(getattr(ns, "days", 90) or 90)
        since     = getattr(ns, "since", "") or ""

        include_disabled = 1 if getattr(ns, "include_disabled", False) else 0
        disabled_only    = 1 if getattr(ns, "disabled_only", False) else 0
        include_locked   = 1 if getattr(ns, "include_locked", False) else 0
        locked_only      = 1 if getattr(ns, "locked_only", False) else 0
        include_null     = 1 if getattr(ns, "include_null", False) else 0
        null_only        = 1 if getattr(ns, "null_only", False) else 0
        spn_only         = 1 if getattr(ns, "spn_only", False) else 0
        exclude_spn      = 1 if getattr(ns, "exclude_spn", False) else 0
        member_of = _space_escape_csv(getattr(ns, "member_of", "") or "")

        names_only       = 1 if getattr(ns, "names", False) else 0
        attrs_csv        = getattr(ns, "attributes", "*") or "*"
        #resolve_dates    = 0 if getattr(ns, "raw_timestamps", False) else 1 if getattr(ns, "resolve_dates", True) else 1
        raw_timestamps = 1 if getattr(ns, "raw_timestamps", False) else 0
        resolve_dates  = 0 if raw_timestamps else 1

        sort_field, sort_dir = AdStaleUsersBof._parse_sort(ns)
        limit_n         = int(getattr(ns, "limit", 0) or 0)
        want_stats      = 1 if getattr(ns, "stats", False) else 0

        # Pack in the exact order the BOF expects
        return [
            f"-Z:{dc_host}",
            f"-Z:{dc_ip}",
            f"-Z:{domain}",
            f"-i:{use_ldaps}",
            f"-i:{port}",
            f"-Z:{ouDN}",
            f"-Z:{filt}",
            f"-i:{attr_src}",
            f"-i:{days}",
            f"-Z:{since}",
            f"-i:{include_disabled}",
            f"-i:{disabled_only}",
            f"-i:{include_locked}",
            f"-i:{locked_only}",
            f"-i:{include_null}",
            f"-i:{null_only}",
            f"-i:{spn_only}",
            f"-i:{exclude_spn}",
            f"-Z:{member_of}",
            f"-i:{names_only}",
            f"-Z:{attrs_csv}",
            f"-i:{resolve_dates}",
            f"-i:{raw_timestamps}",
            f"-i:{sort_field}",
            f"-i:{sort_dir}",
            f"-i:{limit_n}",
            f"-i:{want_stats}",
        ]
