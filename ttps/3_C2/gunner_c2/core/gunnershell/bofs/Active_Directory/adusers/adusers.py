import base64
import re
from typing import List

# BOF imports
from core.gunnershell.bofs.base import Bof, register

from colorama import Style, Fore
brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
brightyellow = "\001" + Style.BRIGHT + Fore.YELLOW + "\002"
reset = Style.RESET_ALL

def _is_ip(s: str) -> bool:
	if not s: return False
	s = s.strip()
	# IPv6 (very loose): contains ':' or starts with '['
	if ':' in s or s.startswith('['): return True
	# IPv4 strict-ish
	m = re.match(r'^\d{1,3}(\.\d{1,3}){3}$', s)
	if not m: return False
	parts = s.split('.')
	return all(0 <= int(p) <= 255 for p in parts)


@register("adusers")
class ADUsersBof(Bof):
	base64bof: str = ""
	x86base64bof: str = ""

	def help_menu():
		menu = """
adusers — Enumerate Active Directory users

Usage
  bofexec adusers [--users] [--basedn <DN>] [--filter <LdapFilter>] [-a <attr,attr,...>] [--user <UPN/DN>] [--password <str>]

Flags:
  --dc <hostname>       Hostname/FQDN of Domain Controller (wide). If omitted -> DC locator (NULL) NOTE: IPs are blocked; use a hostname.
  --ldaps               Use LDAPS (default port 636). If not set -> LDAP (default port 389).
  --port <int>          Override port. If 0/omitted -> defaults by scheme.

  --users               List only sAMAccountName
  --basedn <DN>         Custom Base DN (wide). Default: RootDSE defaultNamingContext
  --filter <filter>     Custom LDAP filter (wide). Default: (&(objectCategory=person)(objectClass=user))
  -a, --attributes <csv>  Comma-separated attributes or "*" for all
  --user <UPN/DN>       Simple bind user (optional; if omitted -> Negotiate)
  --password <str>      Simple bind password

Description
  • By default binds with Negotiate using the current process token.
  • If --user and --password are supplied, uses simple bind with those creds.
  • If --basedn is omitted, resolves RootDSE defaultNamingContext.
  • If --filter is omitted, uses: (&(objectCategory=person)(objectClass=user))
  • If --users is set, prints only sAMAccountName (one per line).
  • Otherwise prints requested attributes (comma-separated).
	Use -a "*" to dump all attributes on each entry.

Examples
  bofexec adusers --users
  bofexec adusers --filter "(&(objectCategory=person)(objectClass=user)(mail=*@contoso.com))" -a "sAMAccountName,mail"
  bofexec adusers --basedn "DC=contoso,DC=com" --user reader@contoso.com --password S3cret! -a "*"
"""
		print(brightgreen + menu + reset)
		return

	@staticmethod
	def args_inject(p):
		# Connection
		p.add_argument("--dc", default="", help="Domain Controller hostname (no IPs). Empty => DC locator")
		p.add_argument("--ldaps", default=False, action="store_true", help="Use LDAPS (default port 636)")
		p.add_argument("--port", type=int, default=0, help="LDAP/LDAPS port (0 => default by scheme)")

		# Search/Output
		p.add_argument("--users", action="store_true", default=False, help="List only sAMAccountName")
		p.add_argument("--basedn", default="", help="Base DN (wide). Default: RootDSE")
		p.add_argument("--filter", default="", help="LDAP filter (wide). Default: user filter")
		p.add_argument("-a", "--attributes", dest="attributes", default="", help="CSV of attributes, or \"*\"")
		p.add_argument("--user", default="", help="Simple bind user (UPN/DN); omit for Negotiate")
		p.add_argument("--password", default="", help="Simple bind password")

	@staticmethod
	def build_remote_args(ns) -> List[str]:
		dc       = getattr(ns, "dc", "") or ""
		if dc and _is_ip(dc):
			raise ValueError("--dc must be a hostname/FQDN, not an IP address")

		use_ldaps = 1 if getattr(ns, "ldaps", False) else 0
		port_in   = int(getattr(ns, "port", 0) or 0)
		# Default ports by scheme if not provided
		port      = port_in if port_in > 0 else (636 if use_ldaps else 389)

		base_dn   = getattr(ns, "basedn", "") or ""
		filt      = getattr(ns, "filter", "") or ""
		usersOnly = 1 if getattr(ns, "users", False) else 0
		attrsCSV  = getattr(ns, "attributes", "") or ""
		bindUser  = getattr(ns, "user", "") or ""
		bindPass  = getattr(ns, "password", "") or ""

		# Pack in exact BOF order/types:
		# 1 -Z dcHostW, 2 -i useLdaps, 3 -i port,
		# 4 -Z baseDN,  5 -Z filter,   6 -i usersOnly,
		# 7 -Z attrs,   8 -Z bindUser, 9 -Z bindPass
		return [
			f"-Z:{dc}",
			f"-i:{use_ldaps}",
			f"-i:{port}",
			f"-Z:{base_dn}",
			f"-Z:{filt}",
			f"-i:{usersOnly}",
			f"-Z:{attrsCSV}",
			f"-Z:{bindUser}",
			f"-Z:{bindPass}",
		]