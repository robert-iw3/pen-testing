import base64
from typing import List

# BOF imports
from core.gunnershell.bofs.base import Bof, register

# Session Management
from core.session_handlers import session_manager

# Command Execution Imports
from core.command_execution import http_command_execution as http_exec
from core.command_execution import tcp_command_execution as tcp_exec

from colorama import Style, Fore
brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
brightyellow = "\001" + Style.BRIGHT + Fore.YELLOW + "\002"
reset = Style.RESET_ALL

@register("probe")
class ProbeBof(Bof):
	base64bof: str = "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FQAAAAAAAAAAAAAAAAAucmRhdGEAAAAAAAAGAAAAAwEYAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAHAAAAAwEUAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAAgAAAACAAAAAgBvdXRwdXQAABAAAAACAAAAAgB0cmFzaAAAAAAAAAACAAAAAgAAAAAAXgAAAAAAAAAAAAAAAgAAAAAAcgAAAAAAAAAAAAAAAgAAAAAAhQAAAAAAAAAAAAAAAgAAAAAAlwAAAAAAAAAAAAAAAgAAAAAArgAAAAAAAAAAAAAAAgAAAAAAzAAAAAAAAAAAAAAAAgAAAAAA5QAAAAAAAAAAAAAAAgAAAAAA/QAAAAAAAAAAAAAAAgAAAAAAIAEAAAAAAAAAAAAAAgAAAAAANAEAAAAAAAAAAAAAAgAAAAAASQEAAAAAAAAAAAAAAgAAAAAAYgEAAAAAAAAAAAAAAgAAAAAAdgEAAAAAAAAAAAAAAgAAAAAAjwEAAAAAAAAAAAAAAgAAAAAApAEAAAAAAAAAAAAAAgAAAAAAuAEAAAAAAAAAAAAAAgAAAAAA0gEAAAAAAAAAAAAAAgAAAAAA6wEAAAAAAAAAAAAAAgAAAAAABQIAAAAAAAAAAAAAAgAAAAAAGwIAAAAAAAAAAAAAAgAAAAAAMwIAAAAAAAAAAAAAAgBHAgAALnJkYXRhJHp6egBwcmludG91dHB1dABpbnRlcm5hbF9wcmludGYAVXRmMTZUb1V0ZjgAaXNfcG9ydF9vcGVuAC5yZGF0YSR6enoAY3VycmVudG91dHNpemUAX19pbXBfTVNWQ1JUJGNhbGxvYwBfX2ltcF9CZWFjb25PdXRwdXQAX19pbXBfTVNWQ1JUJGZyZWUAX19pbXBfTVNWQ1JUJHZzbnByaW50ZgBfX2ltcF9LRVJORUwzMiRHZXRQcm9jZXNzSGVhcABfX2ltcF9LRVJORUwzMiRIZWFwQWxsb2MAX19pbXBfS0VSTkVMMzIkSGVhcEZyZWUAX19pbXBfS2VybmVsMzIkV2lkZUNoYXJUb011bHRpQnl0ZQBfX2ltcF9NU1ZDUlQkbWVtc2V0AF9faW1wX01TVkNSVCRzcHJpbnRmAF9faW1wX1dTMl8zMiRnZXRhZGRyaW5mbwBfX2ltcF9XUzJfMzIkc29ja2V0AF9faW1wX1dTMl8zMiRpb2N0bHNvY2tldABfX2ltcF9XUzJfMzIkY29ubmVjdABfX2ltcF9XUzJfMzIkc2VsZWN0AF9faW1wX1dTMl8zMiRfX1dTQUZESXNTZXQAX19pbXBfV1MyXzMyJGNsb3Nlc29ja2V0AF9faW1wX1dTMl8zMiRmcmVlYWRkcmluZm8AX19pbXBfQmVhY29uRGF0YVBhcnNlAF9faW1wX0JlYWNvbkRhdGFFeHRyYWN0AF9faW1wX0JlYWNvbkRhdGFJbnQA"
	x86base64bof: str = "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AAAAAAAAAAAAAAAAAAAAAAAAZwAAAAAAAAAGAAAAAwEgAQAABwAAAAAAAAAAAAAAAAAAAAAAcQAAAAQAAAACAAAAAgBfb3V0cHV0AAgAAAACAAAAAgBfdHJhc2gAAAAAAAACAAAAAgAAAAAAgQAAAAAAAAAAAAAAAgAAAAAAlgAAAAAAAAAAAAAAAgAAAAAAqgAAAAAAAAAAAAAAAgAAAAAAvQAAAAAAAAAAAAAAAgAAAAAA1QAAAAAAAAAAAAAAAgAAAAAA9gAAAAAAAAAAAAAAAgAAAAAAEwEAAAAAAAAAAAAAAgAAAAAALwEAAAAAAAAAAAAAAgAAAAAAVgEAAAAAAAAAAAAAAgAAAAAAawEAAAAAAAAAAAAAAgAAAAAAgQEAAAAAAAAAAAAAAgAAAAAAngEAAAAAAAAAAAAAAgAAAAAAtgEAAAAAAAAAAAAAAgAAAAAA0wEAAAAAAAAAAAAAAgAAAAAA7AEAAAAAAAAAAAAAAgAAAAAABAIAAAAAAAAAAAAAAgAAAAAAIQIAAAAAAAAAAAAAAgAAAAAAPQIAAAAAAAAAAAAAAgAAAAAAWgIAAAAAAAAAAAAAAgAAAAAAcQIAAAAAAAAAAAAAAgAAAAAAigIAAAAAAAAAAAAAAgCfAgAALnJkYXRhJHp6egAuZWhfZnJhbWUAX2JvZnN0YXJ0AF9wcmludG91dHB1dABfaW50ZXJuYWxfcHJpbnRmAF9VdGYxNlRvVXRmOABfaXNfcG9ydF9vcGVuAC5yZGF0YSR6enoALmVoX2ZyYW1lAF9jdXJyZW50b3V0c2l6ZQBfX2ltcF9fTVNWQ1JUJGNhbGxvYwBfX2ltcF9fQmVhY29uT3V0cHV0AF9faW1wX19NU1ZDUlQkZnJlZQBfX2ltcF9fTVNWQ1JUJHZzbnByaW50ZgBfX2ltcF9fS0VSTkVMMzIkR2V0UHJvY2Vzc0hlYXBAMABfX2ltcF9fS0VSTkVMMzIkSGVhcEFsbG9jQDEyAF9faW1wX19LRVJORUwzMiRIZWFwRnJlZUAxMgBfX2ltcF9fS2VybmVsMzIkV2lkZUNoYXJUb011bHRpQnl0ZUAzMgBfX2ltcF9fTVNWQ1JUJG1lbXNldABfX2ltcF9fTVNWQ1JUJHNwcmludGYAX19pbXBfX1dTMl8zMiRnZXRhZGRyaW5mb0AxNgBfX2ltcF9fV1MyXzMyJHNvY2tldEAxMgBfX2ltcF9fV1MyXzMyJGlvY3Rsc29ja2V0QDEyAF9faW1wX19XUzJfMzIkY29ubmVjdEAxMgBfX2ltcF9fV1MyXzMyJHNlbGVjdEAyMABfX2ltcF9fV1MyXzMyJF9fV1NBRkRJc1NldEA4AF9faW1wX19XUzJfMzIkY2xvc2Vzb2NrZXRANABfX2ltcF9fV1MyXzMyJGZyZWVhZGRyaW5mb0A0AF9faW1wX19CZWFjb25EYXRhUGFyc2UAX19pbXBfX0JlYWNvbkRhdGFFeHRyYWN0AF9faW1wX19CZWFjb25EYXRhSW50AA=="

	def help_menu():
		menu = """
Check if a port is open
Usage: bofexec probe -z <IP> -i <PORT>
"""
		print(brightgreen + menu + reset)
		return

	@staticmethod
	def check_args(zargs: List[str] | None, Zargs: List[str] | None, int16: List[int] | None = None, int32: List[int] | None = None) -> list[str]:
		int32 = int32 or []
		extra: list[int] = []
		if len(int32) < 2:
			extra.append(f"-i:{int32[0]}")
		return extra