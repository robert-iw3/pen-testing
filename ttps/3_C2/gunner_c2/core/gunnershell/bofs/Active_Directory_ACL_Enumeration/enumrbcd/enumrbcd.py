import base64
import re
from typing import List

# BOF imports
from core.gunnershell.bofs.base import Bof, register

from colorama import Style, Fore
brightgreen = "\001" + Style.BRIGHT + Fore.GREEN + "\002"
brightyellow = "\001" + Style.BRIGHT + Fore.YELLOW + "\002"
reset = Style.RESET_ALL

def _space_escape(s: str) -> str:
    return (s or "").replace(" ", "%20")

def _fmt_code(s: str) -> int:
    s = (s or "").strip().lower()
    if s in ("json",): return 1
    if s in ("csv",):  return 2
    if s in ("table","tbl"): return 3
    return 0  # kv(default)

@register("enumrbcd")
class EnumRBCDBof(Bof):
    # fill these with your compiled BOF blob(s)
    base64bof: str = ""
    x86base64bof: str = "<REPLACE_WITH_X86_BASE64_BOF>"

    @staticmethod
    def help_menu():
        menu = f"""
enumrbcd — Enumerate Resource-Based Constrained Delegation (RBCD)

Purpose
  Find directory objects (typically computers) that set
  msDS-AllowedToActOnBehalfOfOtherIdentity and list the principals allowed to act.

Usage
  bofexec enumrbcd [-d <domain>] [--dc <hostname>] [--ldaps] [--port <int>]
                   [-u <user>] [-p <pass>] [--names]
                   [--format json|kv|table]

Connection
  -d, --domain <dns>     Domain DNS name (e.g., contoso.com).
  --dc <hostname>        Domain Controller host/FQDN (host only; :port will be ignored).
  --ldaps                Use LDAPS (default 636); otherwise LDAP (default 389).
  --port <int>           Override port (ALWAYS used if provided).
  -u, --user <str>       Username for bind (UPN or DOMAIN\\User).
  -p, --pass <str>       Password for bind.

Output control
  --names                Only print sAMAccountName of vulnerable objects (one per line).
  --format               Output format: json, kv (default), or table.

Notes
  1) If neither -d nor --dc is supplied, the module auto-discovers the domain and a DC.
  2) If no username/password are supplied, it binds with the current context (SSPI/Negotiate).
  3) Default port is 389 (LDAP) or 636 (LDAPS); an explicit --port always wins.
"""
        print(brightgreen + menu + reset)
        return

    @staticmethod
    def args_inject(p):
        p.add_argument("-d", "--domain", default="", help="DNS domain (e.g., contoso.com)")
        p.add_argument("--dc", default="", help="Domain Controller hostname/FQDN (host only)")
        p.add_argument("--ldaps", action="store_true", default=False, help="Use LDAPS (default 636)")
        p.add_argument("--port", type=int, default=0, help="LDAP/LDAPS port (0 => default by scheme)")
        p.add_argument("-u", "--user", default="", help="Username for bind (UPN or DOMAIN\\User)")
        p.add_argument("-p", "--pass", dest="password", default="", help="Password for bind")
        p.add_argument("--names", action="store_true", default=False, help="Only list sAMAccountNames of vulnerable objects")
        p.add_argument("--format", default="kv", help="Output format: json, kv, csv, or table")

    @staticmethod
    def build_remote_args(ns) -> List[str]:
        domain   = getattr(ns, "domain", "") or ""
        dc       = getattr(ns, "dc", "") or ""
        use_ldaps = 1 if getattr(ns, "ldaps", False) else 0

        port_in   = int(getattr(ns, "port", 0) or 0)
        port      = port_in if port_in > 0 else (636 if use_ldaps else 389)

        user      = getattr(ns, "user", "") or ""
        pwd       = getattr(ns, "password", "") or ""
        namesOnly = 1 if getattr(ns, "names", False) else 0
        fmtCode   = _fmt_code(getattr(ns, "format", "kv"))

        return [
            f"-Z:{domain}",
            f"-Z:{dc}",
            f"-i:{use_ldaps}",
            f"-i:{port}",
            f"-Z:{user}",
            f"-Z:{pwd}",
            f"-i:{namesOnly}",
            f"-i:{fmtCode}",
        ]
