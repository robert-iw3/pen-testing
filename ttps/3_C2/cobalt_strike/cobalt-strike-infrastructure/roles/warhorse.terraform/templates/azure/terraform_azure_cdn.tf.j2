{% if warhorse.vm|regex_search("(?i).+('cdn':.+'provider':\s'azure')", multiline=True, ignorecase=True) %}
resource "azurerm_cdn_profile" "cdn_profile_{{ warhorse.general.op_number }}" {
  name                = "{{ warhorse.general.op_number }}"
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  sku                 = "Standard_Microsoft"
}
{% endif %}
{% for vm in warhorse.vm %}
{% set outer_loop = loop %}
{% if vm.cobaltstrike.cdn is defined %}
{% for cdn in vm.cobaltstrike.cdn %}
{% if cdn.provider == 'azure' and vm.cobaltstrike.auth_header is defined and false %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "cs-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "cs-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }
}
{% endif %}
{% if cdn.provider == 'azure' and vm.cobaltstrike.auth_header is defined and true %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "cs-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "cs-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }

  delivery_rule{
    name = "header"
    order = 2
    request_header_condition {
      selector = "{{ vm.cobaltstrike.auth_header_name | default(auth_header_name) }}"
      operator = "Equal"
      negate_condition = true
      match_values = ["{{ vm.cobaltstrike.auth_header_value | default(auth_header_value) }}"]
    }

    url_redirect_action {
      redirect_type = "PermanentRedirect"
      hostname = "{{ cdn.redirect_domain |default('azure.microsoft.com') }}"
    }
  }
}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% for vm in warhorse.vm %}
{% set outer_loop = loop %}
{% if vm.mythic.cdn is defined %}
{% for cdn in vm.mythic.cdn %}
{% if cdn.provider == 'azure' and vm.mythic.auth_header is not true %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "mythic-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "mythic-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }
}
{% endif %}
{% if cdn.provider == 'azure' and vm.mythic.auth_header is defined and true %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "mythic-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "mythic-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }

  delivery_rule{
    name = "header"
    order = 2
    request_header_condition {
      selector = "{{ vm.mythic.auth_header_name | default(auth_header_name) }}"
      operator = "Equal"
      negate_condition = true
      match_values = ["{{ vm.mythic.auth_header_value | default(auth_header_value) }}"]
    }

    url_redirect_action {
      redirect_type = "PermanentRedirect"
      hostname = "{{ cdn.redirect_url |default('https://azure.microsoft.com') }}"
    }
  }
}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% for vm in warhorse.vm %}
{% set outer_loop = loop %}
{% if vm.nighthawk.cdn is defined %}
{% for cdn in vm.nighthawk.cdn %}
{% if cdn.provider == 'azure' and vm.nighthawk.auth_header is not true %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "nh-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "nh-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }
}
{% endif %}
{% if cdn.provider == 'azure' and vm.nighthawk.auth_header is defined and true %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "nh-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "nh-{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }

  delivery_rule{
    name = "header"
    order = 2
    request_header_condition {
      selector = "{{ vm.nighthawk.auth_header_name | default(auth_header_name) }}"
      operator = "Equal"
      negate_condition = true
      match_values = ["{{ vm.nighthawk.auth_header_value | default(auth_header_value) }}"]
    }

    url_redirect_action {
      redirect_type = "PermanentRedirect"
      hostname = "{{ cdn.redirect_url |default('azure.microsoft.com') }}"
    }
  }
}
{% endif %}
{% endfor %}
{% endif %}
{% if vm.evilginx2.cdn is defined %}
{% for cdn in vm.evilginx2.cdn %}
{% if cdn.provider == 'azure' %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "{{ cdn.hostname }}.azureedge.net"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "{{ vm.name }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }
}
{% endif %}
{% endfor %}
{% endif %}
{% if vm.gophish.cdn is defined %}
{% for cdn in vm.gophish.cdn %}
{% if cdn.provider == 'azure' %}
resource "azurerm_cdn_endpoint" "cdn_endpoint_{{ cdn.hostname }}" {
  name                = "{{ cdn.hostname }}"
  profile_name        = azurerm_cdn_profile.cdn_profile_{{ warhorse.general.op_number }}.name
  location            = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.location
  resource_group_name = azurerm_resource_group.azure_resource_{{ warhorse.general.op_number }}.name
  origin_host_header  = "{{ vm.gophish.site_hostname }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  querystring_caching_behaviour = "BypassCaching"

  origin {
    name      = "{{ cdn.hostname }}"
    host_name = "{{ vm.gophish.site_hostname }}.{{ warhorse.dns.op_domain_name|default(dns_op_domain_name)}}"
  }

  delivery_rule{
    name = "nocache"
    order = 1
    
    query_string_condition {
      operator = "Any"
    }

    
    url_path_condition {
      operator = "Any"
    }

    cache_expiration_action {
      behavior =  "BypassCache"
    }
  }
}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}