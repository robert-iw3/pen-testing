#!/bin/bash
# Apache Advisory https://lists.apache.org/thread/l3zcg3vts88bmc7w8172wkgw610y693z
# This script gets a root directory as an argument, scans it for the camel-core java library, unzips it and look for versions vulnerable to CVE-2025-27636
# Usage: ./CamelScanner.sh <directory_to_scan>

if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <directory_to_scan>"
    exit
fi
if ! command -v unzip &>/dev/null; then
    echo "Error: 'unzip' is not installed. Please install it and run the script again."
    exit 1
fi

PATHS_TO_SCAN=$1

CAMEL_CORE_FILE_PATTERN="camel-core-*.jar"
MANIFEST_FILE_RELATIVE_PATH="META-INF/MANIFEST.MF"


echo "Scanning paths ${PATHS_TO_SCAN} for camel core library"


find_jar_files() {
    local root_path="$1"
    local found_files=()
    while IFS= read -r file; do
        if [[ "$file" =~ camel-core.*\.jar ]]; then
            found_files+=("$file")
        fi
    done < <(find "$root_path" -type f -name "camel-core*.jar" 2>/dev/null)
    echo "${found_files[@]}"
}



extract_version() {
    local jar_file="$1"
    local version=$(unzip -p "$jar_file" "$MANIFEST_FILE_RELATIVE_PATH" 2>/dev/null | grep "^Implementation-Version:" | awk '{print $2}')
    if [[ -n "$version" ]]; then
        echo "$version"
    fi
}

is_vulnerable_version() {
    local version="$1"
    local vulnerable_versions=(
        "4.10.0 4.10.1"
        "4.8.0 4.8.4"
        "3.10.0 3.22.3"
    )

    version_to_int() {
        local version="$1"
        local IFS='.'
        read -r major minor patch <<< "$version"
        echo "$((major * 10000 + minor * 100 + patch))"
    }

    for range in "${vulnerable_versions[@]}"; do
        read -r min max <<< "$range"
        local version_int
        local min_int
        local max_int

        version_int=$(version_to_int "$version")
        min_int=$(version_to_int "$min")
        max_int=$(version_to_int "$max")

        if [[ "$version_int" -ge "$min_int" && "$version_int" -le "$max_int" ]]; then
            return 0
        fi
    done
    return 1
}


found_jars=( $(find_jar_files "${PATHS_TO_SCAN}") )


if [[ ${#found_jars[@]} -gt 0 ]]; then
    for jar_file in "${found_jars[@]}"; do
        echo "Found camel-core at $jar_file"
        dir_path=$(dirname "$jar_file")
	camel_version=$(extract_version "$jar_file")
	camel_version="${camel_version::-1}"
	echo "camel version: $camel_version"
	is_vulnerable_version "$camel_version"
	if [[ $? -eq 0 ]]; then
		echo "version is vulnerable!"
	else
		echo "version is NOT vulnerable"
	fi
    done
else
    echo "camel-core not found on the specified drives"
fi
