import ast
import importlib.util
import subprocess
import sys
import os
import glob

def get_imported_modules(file_path):
    """Parse a Python file and extract imported module names."""
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            tree = ast.parse(file.read(), filename=file_path)

        modules = set()
        for node in ast.walk(tree):
            if isinstance(node, ast.Import):
                for name in node.names:
                    modules.add(name.name.split('.')[0])  # Get base module name
            elif isinstance(node, ast.ImportFrom):
                if node.module:
                    modules.add(node.module.split('.')[0])  # Get base module name
        return modules
    except Exception as e:
        print(f"Error parsing file {file_path}: {e}")
        return set()

def is_module_installed(module_name):
    """Check if a module is installed."""
    return importlib.util.find_spec(module_name) is not None

def install_module(module_name):
    """Attempt to install a module using pip."""
    try:
        print(f"Installing {module_name}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", module_name])
        print(f"Successfully installed {module_name}")
    except subprocess.CalledProcessError as e:
        print(f"Failed to install {module_name}: {e}")
    except Exception as e:
        print(f"Unexpected error while installing {module_name}: {e}")

def check_and_install_modules(file_path):
    """Check and install missing modules for a given Python script."""
    if not os.path.isfile(file_path):
        print(f"Error: File {file_path} does not exist")
        return

    print(f"\nProcessing {file_path}")
    modules = get_imported_modules(file_path)
    if not modules:
        print(f"No modules found in {file_path} or parsing failed")
        return

    print(f"Found modules: {', '.join(modules)}")

    for module in modules:
        if not is_module_installed(module):
            print(f"Module {module} is not installed")
            install_module(module)
        else:
            print(f"Module {module} is already installed")

def process_directory():
    """Scan current directory for .py files and process each."""
    current_dir = os.getcwd()
    py_files = glob.glob(os.path.join(current_dir, "*.py"))

    if not py_files:
        print("No Python (.py) files found in the current directory")
        return

    print(f"Found {len(py_files)} Python file(s) in {current_dir}")
    for py_file in py_files:
        check_and_install_modules(py_file)

if __name__ == "__main__":
    process_directory()