#!/usr/bin/env python3
"""
ns_log_scanner.py — detects non-text (binary) bytes in Citrix NetScaler ns.log files

Usage
-----
    ./log_scanner.py /var/log/ns.log

Exit status
-----------
    0 - no binary found  
    1 - at least one offending line printed to stdout
"""

import sys
from pathlib import Path

# Printable ASCII plus horizontal-tab, LF, CR
ALLOWED = set(range(0x20, 0x7F)) | {0x09, 0x0A, 0x0D}


def is_plain(line: bytes) -> bool:
    return all(b in ALLOWED for b in line)


def scan(path: str) -> int:
    bad_lines = 0
    with (sys.stdin.buffer if path == "-" else open(path, "rb")) as fh:
        for lineno, raw in enumerate(fh, 1):
            if not is_plain(raw):
                bad_lines += 1
                bad = [f"{b:02x}" for b in raw if b not in ALLOWED]
                print(
                    f"[binary] line {lineno}: first 10 bad bytes → "
                    f"{' '.join(bad[:10])}"
                )
    return bad_lines


def main() -> None:
    if len(sys.argv) != 2:
        print("Provide one filename (or '-' to read from stdin).", file=sys.stderr)
        sys.exit(2)

    target = sys.argv[1]
    if target != "-" and not Path(target).is_file():
        print(f"No such file: {target}", file=sys.stderr)
        sys.exit(2)

    hits = scan(target)
    if hits:
        print(f"\n{hits} line(s) with non-text (ASCII) bytes detected — time to investigate further (this could also be a result of other printable characters, always investigate before concluding that you have been compromised)")
        sys.exit(1)
    else:
        print("✓ ns.log is pure ASCII text.")
        sys.exit(0)


if __name__ == "__main__":
    main()

