name: CI

on:
  push:
  pull_request:

permissions:
  packages: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cross-rs/cross:latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-musl ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set Default Rust Toolchain
        run: rustup default stable

      - name: Install llvm
        run: apt-get update && apt-get install -y llvm

      - name: Compile
        run: cross build --release --target ${{ matrix.target }}

      - name: Strip Binary
        run: |
          llvm-strip target/${{ matrix.target }}/release/ecscape

      - name: Verify Static Linking
        run: |
          file target/${{ matrix.target }}/release/ecscape

      - name: Verify Static Linking with ldd
        run: |
          ldd_output=$(ldd target/${{ matrix.target }}/release/ecscape 2>&1 || true)
          echo "$ldd_output"
          echo "$ldd_output" | grep -E -q "not a dynamic executable|statically linked" || { echo "Binary is not statically linked!"; exit 1; }

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: ecscape-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/ecscape

  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Built Binary
        uses: actions/download-artifact@v4
        with:
          name: ecscape-${{ matrix.arch }}-unknown-linux-musl
          path: .

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build --platform linux/${{ matrix.arch }} \
            -t ghcr.io/${{ github.repository_owner }}/ecscape:${{ matrix.arch }} \
            --build-arg ARCH=${{ matrix.arch }} .

      - name: Push Docker Image
        run: docker push ghcr.io/${{ github.repository_owner }}/ecscape:${{ matrix.arch }}

  manifest:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create and Push Multi-Arch Manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/ecscape:latest \
            --amend ghcr.io/${{ github.repository_owner }}/ecscape:x86_64 \
            --amend ghcr.io/${{ github.repository_owner }}/ecscape:aarch64
          docker manifest push ghcr.io/${{ github.repository_owner }}/ecscape:latest